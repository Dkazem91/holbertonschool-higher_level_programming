>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]
>>> print(matrix_mul("string",[[1,2]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/Src/holbertonschool-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 4, in matrix_mul
    raise TypeError('m_a must be a list')
TypeError: m_a must be a list
>>> print(matrix_mul([[1,2]],"string"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/Src/holbertonschool-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 6, in matrix_mul
    raise TypeError('m_b must be a list')
TypeError: m_b must be a list
>>> print(matrix_mul([],[[1,2]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/Src/holbertonschool-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 8, in matrix_mul
    raise TypeError('m_a can\'t be empty')
TypeError: m_a can't be empty
>>> print(matrix_mul([[1,2]],[]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/Src/holbertonschool-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 10, in matrix_mul
    raise TypeError('m_b can\'t be empty')
TypeError: m_b can't be empty
