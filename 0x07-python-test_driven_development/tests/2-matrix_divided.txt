#2-matrix_divided.txt
===============================
 How to 2-matrix_divided.py
===============================

This library is very simple, since it only has one function called
``matrix_divided()``.

Numbers
=======

``matrix_divided()`` returns a new matrix of all elements
 divided by a divider variable.

all ints
::
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided
    >>> matrix = [[1,2,3],[4,5,6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

ints and floats and negatives
::
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided
    >>> matrix = [[1.5,2.0,3.0],[4.0,-5.0,-6]]
    >>> matrix_divided(matrix, 3)
    [[0.5, 0.67, 1.0], [1.33, -1.67, -2.0]]

check empty list
::
    >>> matrix = [[],[]]
    >>> matrix_divided(matrix,3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

check empty list and filled one
::
    >>> matrix = [[],[1,2,3]]
    >>> matrix_divided(matrix,3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

check list with invalids
::
    >>> matrix = [['a','b',2,3,4],[1,2,[1,2,3],'asdf']]
    >>> matrix_divided(matrix,3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

check wrong number of elements in each row
::
    >>> matrix = [[1,2,3],[1,2]]
    >>> matrix_divided(matrix,3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

check wrong matrix tipe
::
    >>> matrix = "test"
    >>> matrix_divided(matrix,3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 3.0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [1, 2, 3]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 3.0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [str(1), str(2), str(3)]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 3.0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [1, 2.0, 3]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 3.0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0]]
>>> matrix_divided(matrix, 3.0)
[[0.33, 0.67, 1.0]]
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 69, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 71, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix = [[1.0, 2.0, 3.0]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0]]
>>> matrix_divided(matrix, 3.0)
[[0.33, 0.67, 1.0]]
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 69, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 71, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix = [[1, 2.0, 3]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0]]
>>> matrix_divided(matrix, 3.0)
[[0.33, 0.67, 1.0]]
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 69, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 71, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix = [[1, 2.0, "3"]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 3.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, 3.0)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 69, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 71, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix = [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, 3.0)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 69, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 71, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix = [[1, 2.0, 3], [4.0, 5, 6.0]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, 3.0)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 69, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 71, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix = [[1, 2.0, "3"], [4, 5.0, "6"]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 3.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, 3.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix = [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0, 7.0]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, 3.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix = [[1, 2.0, 3], [4.0, 5, 6.0, 7]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, 3.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 67, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix = [[1, 2.0, "3"], [4, 5.0, "6", 7]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 3.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, str(3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 65, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
